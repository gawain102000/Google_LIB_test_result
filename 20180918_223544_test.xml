<?xml version="1.0" encoding="UTF-8"?>
<testsuites tests="21" failures="1" disabled="4" errors="0" timestamp="2018-09-14T09:14:42" time="1.12" name="AllTests">
  <testsuite name="ConvolutionTest" tests="3" failures="1" disabled="0" errors="0" time="0.002">
    <testcase name="GetWorkspaceSize_Overflow" status="run" time="0.002" classname="ConvolutionTest" />
    <testcase name="GetConvolutionDesciptor_ArrayLengthRequested_Range" status="run" time="0" classname="ConvolutionTest">
      <failure message="cudnn_test.cc:150&#x0A;Value of: IsOk(GetStatus(cudnnGetConvolutionNdDescriptor( conv_desc.get(), array_length_requested, &amp;rank, pad, stride, dilation, &amp;convolution_mode, &amp;compute_type)) &lt;&lt; &quot; array_length_requested = &quot; &lt;&lt; array_length_requested)&#x0A;  Actual: false (cuDNN error &apos;CUDNN_STATUS_NOT_SUPPORTED&apos; array_length_requested = 7)&#x0A;Expected: true" type=""><![CDATA[cudnn_test.cc:150
Value of: IsOk(GetStatus(cudnnGetConvolutionNdDescriptor( conv_desc.get(), array_length_requested, &rank, pad, stride, dilation, &convolution_mode, &compute_type)) << " array_length_requested = " << array_length_requested)
  Actual: false (cuDNN error 'CUDNN_STATUS_NOT_SUPPORTED' array_length_requested = 7)
Expected: true]]></failure>
      <failure message="cudnn_test.cc:150&#x0A;Value of: IsOk(GetStatus(cudnnGetConvolutionNdDescriptor( conv_desc.get(), array_length_requested, &amp;rank, pad, stride, dilation, &amp;convolution_mode, &amp;compute_type)) &lt;&lt; &quot; array_length_requested = &quot; &lt;&lt; array_length_requested)&#x0A;  Actual: false (cuDNN error &apos;CUDNN_STATUS_NOT_SUPPORTED&apos; array_length_requested = 8)&#x0A;Expected: true" type=""><![CDATA[cudnn_test.cc:150
Value of: IsOk(GetStatus(cudnnGetConvolutionNdDescriptor( conv_desc.get(), array_length_requested, &rank, pad, stride, dilation, &convolution_mode, &compute_type)) << " array_length_requested = " << array_length_requested)
  Actual: false (cuDNN error 'CUDNN_STATUS_NOT_SUPPORTED' array_length_requested = 8)
Expected: true]]></failure>
    </testcase>
    <testcase name="GetGroupedConvolutionForwardOutputDim" status="run" time="0" classname="ConvolutionTest" />
  </testsuite>
  <testsuite name="FromFile/ConvolutionTest" tests="18" failures="0" disabled="4" errors="0" time="1.117">
    <testcase name="CompareResults/NHWC_TRUE_HALF_CONFIG_Unsupported" value_param="&#x0A;reference {&#x0A;  input {&#x0A;    dimension: 1&#x0A;    dimension: 1&#x0A;    dimension: 128&#x0A;    dimension: 128&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  filter {&#x0A;    dimension: 1&#x0A;    dimension: 1&#x0A;    dimension: 3&#x0A;    dimension: 3&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  convolution {&#x0A;    pad: 1&#x0A;    pad: 1&#x0A;    compute_mode: DATA_FLOAT&#x0A;  }&#x0A;  fwd_algo: CONVOLUTION_FWD_ALGO_IMPLICIT_PRECOMP_GEMM&#x0A;  label: &quot;NHWC_TRUE_HALF_CONFIG_Unsupported&quot;&#x0A;}&#x0A;test {&#x0A;  convolution {&#x0A;    compute_mode: DATA_HALF&#x0A;  }&#x0A;}&#x0A;" status="run" time="0.005" classname="FromFile/ConvolutionTest" />
    <testcase name="CompareResults/NHWC_FLOAT_CONFIG_InternalError" value_param="&#x0A;reference {&#x0A;  input {&#x0A;    dimension: 1&#x0A;    dimension: 16&#x0A;    dimension: 81&#x0A;    dimension: 47&#x0A;    data_type: DATA_FLOAT&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  filter {&#x0A;    dimension: 1&#x0A;    dimension: 16&#x0A;    dimension: 8&#x0A;    dimension: 11&#x0A;    data_type: DATA_FLOAT&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  convolution {&#x0A;    pad: 4&#x0A;    pad: 5&#x0A;    compute_mode: DATA_FLOAT&#x0A;  }&#x0A;  fwd_algo: CONVOLUTION_FWD_ALGO_IMPLICIT_PRECOMP_GEMM&#x0A;  label: &quot;NHWC_FLOAT_CONFIG_InternalError&quot;&#x0A;}&#x0A;" status="run" time="0.006" classname="FromFile/ConvolutionTest" />
    <testcase name="CompareResults/NHWC_PSEUDO_HALF_CONFIG_Crash" value_param="&#x0A;reference {&#x0A;  input {&#x0A;    dimension: 1&#x0A;    dimension: 1&#x0A;    dimension: 128&#x0A;    dimension: 128&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  filter {&#x0A;    dimension: 1&#x0A;    dimension: 1&#x0A;    dimension: 3&#x0A;    dimension: 3&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  convolution {&#x0A;    pad: 1&#x0A;    pad: 1&#x0A;    compute_mode: DATA_FLOAT&#x0A;  }&#x0A;  fwd_algo: CONVOLUTION_FWD_ALGO_IMPLICIT_PRECOMP_GEMM&#x0A;  label: &quot;NHWC_PSEUDO_HALF_CONFIG_Crash&quot;&#x0A;}&#x0A;" status="run" time="0.004" classname="FromFile/ConvolutionTest" />
    <testcase name="CompareResults/BlendResult" value_param="&#x0A;reference {&#x0A;  input {&#x0A;    dimension: 1&#x0A;    dimension: 1&#x0A;    dimension: 128&#x0A;    dimension: 128&#x0A;    data_type: DATA_FLOAT&#x0A;    format: TENSOR_NCHW&#x0A;  }&#x0A;  filter {&#x0A;    dimension: 1&#x0A;    dimension: 1&#x0A;    dimension: 3&#x0A;    dimension: 3&#x0A;    data_type: DATA_FLOAT&#x0A;    format: TENSOR_NCHW&#x0A;  }&#x0A;  convolution {&#x0A;    pad: 1&#x0A;    pad: 1&#x0A;    compute_mode: DATA_FLOAT&#x0A;  }&#x0A;  one_minus_alpha: 0.3&#x0A;  beta: 0.4&#x0A;  fwd_algo: CONVOLUTION_FWD_ALGO_IMPLICIT_PRECOMP_GEMM&#x0A;  label: &quot;BlendResult&quot;&#x0A;}&#x0A;test {&#x0A;  all_algos: CONVOLUTION_FWD&#x0A;}&#x0A;" status="run" time="0.01" classname="FromFile/ConvolutionTest" />
    <testcase name="CompareResults/GroupedConvolution" value_param="&#x0A;reference {&#x0A;  input {&#x0A;    dimension: 1&#x0A;    dimension: 10&#x0A;    dimension: 13&#x0A;    dimension: 13&#x0A;    data_type: DATA_FLOAT&#x0A;    format: TENSOR_NCHW&#x0A;  }&#x0A;  filter {&#x0A;    dimension: 35&#x0A;    dimension: 2&#x0A;    dimension: 3&#x0A;    dimension: 3&#x0A;    data_type: DATA_FLOAT&#x0A;    format: TENSOR_NCHW&#x0A;  }&#x0A;  convolution {&#x0A;    pad: 1&#x0A;    pad: 1&#x0A;    compute_mode: DATA_FLOAT&#x0A;    group_count: 5&#x0A;  }&#x0A;  output {&#x0A;    dimension: 1&#x0A;    dimension: 35&#x0A;    dimension: 13&#x0A;    dimension: 13&#x0A;    data_type: DATA_FLOAT&#x0A;    format: TENSOR_NCHW&#x0A;  }&#x0A;  fwd_algo: CONVOLUTION_FWD_ALGO_IMPLICIT_PRECOMP_GEMM&#x0A;  label: &quot;GroupedConvolution&quot;&#x0A;}&#x0A;test {&#x0A;  all_algos: CONVOLUTION_FWD&#x0A;}&#x0A;" status="run" time="0.008" classname="FromFile/ConvolutionTest" />
    <testcase name="CompareResults/GarbageInWorkspace" value_param="&#x0A;reference {&#x0A;  input {&#x0A;    dimension: 128&#x0A;    dimension: 1024&#x0A;    dimension: 14&#x0A;    dimension: 14&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  filter {&#x0A;    dimension: 2048&#x0A;    dimension: 1024&#x0A;    dimension: 1&#x0A;    dimension: 1&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NCHW&#x0A;  }&#x0A;  convolution {&#x0A;    pad: 0&#x0A;    pad: 0&#x0A;    filter_stride: 2&#x0A;    filter_stride: 2&#x0A;    compute_mode: DATA_FLOAT&#x0A;    mode: CROSS_CORRELATION&#x0A;    math_type: DEFAULT_MATH&#x0A;  }&#x0A;  output {&#x0A;    dimension: 128&#x0A;    dimension: 2048&#x0A;    dimension: 7&#x0A;    dimension: 7&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NCHW&#x0A;  }&#x0A;  bwd_data_algo: CONVOLUTION_BWD_DATA_ALGO_0&#x0A;  label: &quot;GarbageInWorkspace&quot;&#x0A;}&#x0A;test {&#x0A;  convolution {&#x0A;    math_type: TENSOR_OP_MATH&#x0A;  }&#x0A;  all_algos: CONVOLUTION_BWD_DATA&#x0A;}&#x0A;test {&#x0A;  input {&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  filter {&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  convolution {&#x0A;    math_type: TENSOR_OP_MATH&#x0A;  }&#x0A;  output {&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  all_algos: CONVOLUTION_BWD_DATA&#x0A;}&#x0A;" status="run" time="0.94" classname="FromFile/ConvolutionTest" />
    <testcase name="CompareResults/DISABLED_NCHW_NHWC_NHWC_Crash" value_param="&#x0A;reference {&#x0A;  input {&#x0A;    dimension: 128&#x0A;    dimension: 1024&#x0A;    dimension: 14&#x0A;    dimension: 14&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NCHW&#x0A;  }&#x0A;  filter {&#x0A;    dimension: 2048&#x0A;    dimension: 1024&#x0A;    dimension: 1&#x0A;    dimension: 1&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  convolution {&#x0A;    filter_stride: 2&#x0A;    filter_stride: 2&#x0A;    compute_mode: DATA_FLOAT&#x0A;    mode: CROSS_CORRELATION&#x0A;    math_type: TENSOR_OP_MATH&#x0A;  }&#x0A;  output {&#x0A;    dimension: 128&#x0A;    dimension: 2048&#x0A;    dimension: 7&#x0A;    dimension: 7&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  bwd_data_algo: CONVOLUTION_BWD_DATA_ALGO_1&#x0A;  label: &quot;DISABLED_NCHW_NHWC_NHWC_Crash&quot;&#x0A;}&#x0A;" status="notrun" time="0" classname="FromFile/ConvolutionTest" />
    <testcase name="CompareResults/DISABLED_NHWC_NHWC_NCHW_ILLEGAL_ACCESS" value_param="&#x0A;reference {&#x0A;  input {&#x0A;    dimension: 128&#x0A;    dimension: 64&#x0A;    dimension: 56&#x0A;    dimension: 56&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  filter {&#x0A;    dimension: 256&#x0A;    dimension: 64&#x0A;    dimension: 1&#x0A;    dimension: 1&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  convolution {&#x0A;    filter_stride: 1&#x0A;    filter_stride: 1&#x0A;    compute_mode: DATA_FLOAT&#x0A;    mode: CROSS_CORRELATION&#x0A;    math_type: TENSOR_OP_MATH&#x0A;  }&#x0A;  output {&#x0A;    dimension: 128&#x0A;    dimension: 256&#x0A;    dimension: 56&#x0A;    dimension: 56&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NCHW&#x0A;  }&#x0A;  fwd_algo: CONVOLUTION_FWD_ALGO_IMPLICIT_PRECOMP_GEMM&#x0A;  label: &quot;DISABLED_NHWC_NHWC_NCHW_ILLEGAL_ACCESS&quot;&#x0A;}&#x0A;" status="notrun" time="0" classname="FromFile/ConvolutionTest" />
    <testcase name="CompareResults/FlakyMismatch" value_param="&#x0A;reference {&#x0A;  input {&#x0A;    dimension: 256&#x0A;    dimension: 3&#x0A;    dimension: 224&#x0A;    dimension: 224&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  filter {&#x0A;    dimension: 64&#x0A;    dimension: 3&#x0A;    dimension: 7&#x0A;    dimension: 7&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  convolution {&#x0A;    pad: 3&#x0A;    pad: 3&#x0A;    filter_stride: 2&#x0A;    filter_stride: 2&#x0A;    compute_mode: DATA_FLOAT&#x0A;    mode: CROSS_CORRELATION&#x0A;    math_type: DEFAULT_MATH&#x0A;  }&#x0A;  output {&#x0A;    dimension: 256&#x0A;    dimension: 64&#x0A;    dimension: 112&#x0A;    dimension: 112&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  bwd_filter_algo: CONVOLUTION_BWD_FILTER_ALGO_0&#x0A;  label: &quot;FlakyMismatch&quot;&#x0A;}&#x0A;test {&#x0A;  all_algos: CONVOLUTION_BWD_FILTER&#x0A;}&#x0A;test {&#x0A;  convolution {&#x0A;    math_type: TENSOR_OP_MATH&#x0A;  }&#x0A;  all_algos: CONVOLUTION_BWD_FILTER&#x0A;}&#x0A;values_lower_bound: 0.001&#x0A;values_upper_bound: 0.001&#x0A;" status="run" time="0.105" classname="FromFile/ConvolutionTest" />
    <testcase name="GetAlgorithm_v7/NHWC_TRUE_HALF_CONFIG_Unsupported" value_param="&#x0A;reference {&#x0A;  input {&#x0A;    dimension: 1&#x0A;    dimension: 1&#x0A;    dimension: 128&#x0A;    dimension: 128&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  filter {&#x0A;    dimension: 1&#x0A;    dimension: 1&#x0A;    dimension: 3&#x0A;    dimension: 3&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  convolution {&#x0A;    pad: 1&#x0A;    pad: 1&#x0A;    compute_mode: DATA_FLOAT&#x0A;  }&#x0A;  fwd_algo: CONVOLUTION_FWD_ALGO_IMPLICIT_PRECOMP_GEMM&#x0A;  label: &quot;NHWC_TRUE_HALF_CONFIG_Unsupported&quot;&#x0A;}&#x0A;test {&#x0A;  convolution {&#x0A;    compute_mode: DATA_HALF&#x0A;  }&#x0A;}&#x0A;" status="run" time="0.005" classname="FromFile/ConvolutionTest" />
    <testcase name="GetAlgorithm_v7/NHWC_FLOAT_CONFIG_InternalError" value_param="&#x0A;reference {&#x0A;  input {&#x0A;    dimension: 1&#x0A;    dimension: 16&#x0A;    dimension: 81&#x0A;    dimension: 47&#x0A;    data_type: DATA_FLOAT&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  filter {&#x0A;    dimension: 1&#x0A;    dimension: 16&#x0A;    dimension: 8&#x0A;    dimension: 11&#x0A;    data_type: DATA_FLOAT&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  convolution {&#x0A;    pad: 4&#x0A;    pad: 5&#x0A;    compute_mode: DATA_FLOAT&#x0A;  }&#x0A;  fwd_algo: CONVOLUTION_FWD_ALGO_IMPLICIT_PRECOMP_GEMM&#x0A;  label: &quot;NHWC_FLOAT_CONFIG_InternalError&quot;&#x0A;}&#x0A;" status="run" time="0.018" classname="FromFile/ConvolutionTest" />
    <testcase name="GetAlgorithm_v7/NHWC_PSEUDO_HALF_CONFIG_Crash" value_param="&#x0A;reference {&#x0A;  input {&#x0A;    dimension: 1&#x0A;    dimension: 1&#x0A;    dimension: 128&#x0A;    dimension: 128&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  filter {&#x0A;    dimension: 1&#x0A;    dimension: 1&#x0A;    dimension: 3&#x0A;    dimension: 3&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  convolution {&#x0A;    pad: 1&#x0A;    pad: 1&#x0A;    compute_mode: DATA_FLOAT&#x0A;  }&#x0A;  fwd_algo: CONVOLUTION_FWD_ALGO_IMPLICIT_PRECOMP_GEMM&#x0A;  label: &quot;NHWC_PSEUDO_HALF_CONFIG_Crash&quot;&#x0A;}&#x0A;" status="run" time="0.005" classname="FromFile/ConvolutionTest" />
    <testcase name="GetAlgorithm_v7/BlendResult" value_param="&#x0A;reference {&#x0A;  input {&#x0A;    dimension: 1&#x0A;    dimension: 1&#x0A;    dimension: 128&#x0A;    dimension: 128&#x0A;    data_type: DATA_FLOAT&#x0A;    format: TENSOR_NCHW&#x0A;  }&#x0A;  filter {&#x0A;    dimension: 1&#x0A;    dimension: 1&#x0A;    dimension: 3&#x0A;    dimension: 3&#x0A;    data_type: DATA_FLOAT&#x0A;    format: TENSOR_NCHW&#x0A;  }&#x0A;  convolution {&#x0A;    pad: 1&#x0A;    pad: 1&#x0A;    compute_mode: DATA_FLOAT&#x0A;  }&#x0A;  one_minus_alpha: 0.3&#x0A;  beta: 0.4&#x0A;  fwd_algo: CONVOLUTION_FWD_ALGO_IMPLICIT_PRECOMP_GEMM&#x0A;  label: &quot;BlendResult&quot;&#x0A;}&#x0A;test {&#x0A;  all_algos: CONVOLUTION_FWD&#x0A;}&#x0A;" status="run" time="0.003" classname="FromFile/ConvolutionTest" />
    <testcase name="GetAlgorithm_v7/GroupedConvolution" value_param="&#x0A;reference {&#x0A;  input {&#x0A;    dimension: 1&#x0A;    dimension: 10&#x0A;    dimension: 13&#x0A;    dimension: 13&#x0A;    data_type: DATA_FLOAT&#x0A;    format: TENSOR_NCHW&#x0A;  }&#x0A;  filter {&#x0A;    dimension: 35&#x0A;    dimension: 2&#x0A;    dimension: 3&#x0A;    dimension: 3&#x0A;    data_type: DATA_FLOAT&#x0A;    format: TENSOR_NCHW&#x0A;  }&#x0A;  convolution {&#x0A;    pad: 1&#x0A;    pad: 1&#x0A;    compute_mode: DATA_FLOAT&#x0A;    group_count: 5&#x0A;  }&#x0A;  output {&#x0A;    dimension: 1&#x0A;    dimension: 35&#x0A;    dimension: 13&#x0A;    dimension: 13&#x0A;    data_type: DATA_FLOAT&#x0A;    format: TENSOR_NCHW&#x0A;  }&#x0A;  fwd_algo: CONVOLUTION_FWD_ALGO_IMPLICIT_PRECOMP_GEMM&#x0A;  label: &quot;GroupedConvolution&quot;&#x0A;}&#x0A;test {&#x0A;  all_algos: CONVOLUTION_FWD&#x0A;}&#x0A;" status="run" time="0.002" classname="FromFile/ConvolutionTest" />
    <testcase name="GetAlgorithm_v7/GarbageInWorkspace" value_param="&#x0A;reference {&#x0A;  input {&#x0A;    dimension: 128&#x0A;    dimension: 1024&#x0A;    dimension: 14&#x0A;    dimension: 14&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  filter {&#x0A;    dimension: 2048&#x0A;    dimension: 1024&#x0A;    dimension: 1&#x0A;    dimension: 1&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NCHW&#x0A;  }&#x0A;  convolution {&#x0A;    pad: 0&#x0A;    pad: 0&#x0A;    filter_stride: 2&#x0A;    filter_stride: 2&#x0A;    compute_mode: DATA_FLOAT&#x0A;    mode: CROSS_CORRELATION&#x0A;    math_type: DEFAULT_MATH&#x0A;  }&#x0A;  output {&#x0A;    dimension: 128&#x0A;    dimension: 2048&#x0A;    dimension: 7&#x0A;    dimension: 7&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NCHW&#x0A;  }&#x0A;  bwd_data_algo: CONVOLUTION_BWD_DATA_ALGO_0&#x0A;  label: &quot;GarbageInWorkspace&quot;&#x0A;}&#x0A;test {&#x0A;  convolution {&#x0A;    math_type: TENSOR_OP_MATH&#x0A;  }&#x0A;  all_algos: CONVOLUTION_BWD_DATA&#x0A;}&#x0A;test {&#x0A;  input {&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  filter {&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  convolution {&#x0A;    math_type: TENSOR_OP_MATH&#x0A;  }&#x0A;  output {&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  all_algos: CONVOLUTION_BWD_DATA&#x0A;}&#x0A;" status="run" time="0.003" classname="FromFile/ConvolutionTest" />
    <testcase name="GetAlgorithm_v7/DISABLED_NCHW_NHWC_NHWC_Crash" value_param="&#x0A;reference {&#x0A;  input {&#x0A;    dimension: 128&#x0A;    dimension: 1024&#x0A;    dimension: 14&#x0A;    dimension: 14&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NCHW&#x0A;  }&#x0A;  filter {&#x0A;    dimension: 2048&#x0A;    dimension: 1024&#x0A;    dimension: 1&#x0A;    dimension: 1&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  convolution {&#x0A;    filter_stride: 2&#x0A;    filter_stride: 2&#x0A;    compute_mode: DATA_FLOAT&#x0A;    mode: CROSS_CORRELATION&#x0A;    math_type: TENSOR_OP_MATH&#x0A;  }&#x0A;  output {&#x0A;    dimension: 128&#x0A;    dimension: 2048&#x0A;    dimension: 7&#x0A;    dimension: 7&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  bwd_data_algo: CONVOLUTION_BWD_DATA_ALGO_1&#x0A;  label: &quot;DISABLED_NCHW_NHWC_NHWC_Crash&quot;&#x0A;}&#x0A;" status="notrun" time="0" classname="FromFile/ConvolutionTest" />
    <testcase name="GetAlgorithm_v7/DISABLED_NHWC_NHWC_NCHW_ILLEGAL_ACCESS" value_param="&#x0A;reference {&#x0A;  input {&#x0A;    dimension: 128&#x0A;    dimension: 64&#x0A;    dimension: 56&#x0A;    dimension: 56&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  filter {&#x0A;    dimension: 256&#x0A;    dimension: 64&#x0A;    dimension: 1&#x0A;    dimension: 1&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  convolution {&#x0A;    filter_stride: 1&#x0A;    filter_stride: 1&#x0A;    compute_mode: DATA_FLOAT&#x0A;    mode: CROSS_CORRELATION&#x0A;    math_type: TENSOR_OP_MATH&#x0A;  }&#x0A;  output {&#x0A;    dimension: 128&#x0A;    dimension: 256&#x0A;    dimension: 56&#x0A;    dimension: 56&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NCHW&#x0A;  }&#x0A;  fwd_algo: CONVOLUTION_FWD_ALGO_IMPLICIT_PRECOMP_GEMM&#x0A;  label: &quot;DISABLED_NHWC_NHWC_NCHW_ILLEGAL_ACCESS&quot;&#x0A;}&#x0A;" status="notrun" time="0" classname="FromFile/ConvolutionTest" />
    <testcase name="GetAlgorithm_v7/FlakyMismatch" value_param="&#x0A;reference {&#x0A;  input {&#x0A;    dimension: 256&#x0A;    dimension: 3&#x0A;    dimension: 224&#x0A;    dimension: 224&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  filter {&#x0A;    dimension: 64&#x0A;    dimension: 3&#x0A;    dimension: 7&#x0A;    dimension: 7&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  convolution {&#x0A;    pad: 3&#x0A;    pad: 3&#x0A;    filter_stride: 2&#x0A;    filter_stride: 2&#x0A;    compute_mode: DATA_FLOAT&#x0A;    mode: CROSS_CORRELATION&#x0A;    math_type: DEFAULT_MATH&#x0A;  }&#x0A;  output {&#x0A;    dimension: 256&#x0A;    dimension: 64&#x0A;    dimension: 112&#x0A;    dimension: 112&#x0A;    data_type: DATA_HALF&#x0A;    format: TENSOR_NHWC&#x0A;  }&#x0A;  bwd_filter_algo: CONVOLUTION_BWD_FILTER_ALGO_0&#x0A;  label: &quot;FlakyMismatch&quot;&#x0A;}&#x0A;test {&#x0A;  all_algos: CONVOLUTION_BWD_FILTER&#x0A;}&#x0A;test {&#x0A;  convolution {&#x0A;    math_type: TENSOR_OP_MATH&#x0A;  }&#x0A;  all_algos: CONVOLUTION_BWD_FILTER&#x0A;}&#x0A;values_lower_bound: 0.001&#x0A;values_upper_bound: 0.001&#x0A;" status="run" time="0.002" classname="FromFile/ConvolutionTest" />
  </testsuite>
</testsuites>
